name: Build
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Run Pytest
        run: cargo test --all-features

  linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target: [x86_64]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    needs: [test]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheels
        run: |
          uv build --python ${{ matrix.python-version }}

      - name: install wheel and test
        run: |
          uv run python --version
          uv pip install mannrs --find-links dist --force-reinstall
          uv pip install pytest
          cd tests && pytest

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-13
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    needs: [test]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheels
        run: |
          uv build --python ${{ matrix.python-version }}

      - name: install wheel and test
        run: |
          uv run python --version
          uv pip install mannrs --find-links dist --force-reinstall
          uv pip install pytest
          cd tests && pytest

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
  windows:
    runs-on: windows-2022
    needs: [test]
    strategy:
      matrix:
        target: [x86, x86_64]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheels
        run: |
          uv build --python ${{ matrix.python-version }}

      - name: install wheel and test
        run: |
          uv run python --version
          uv pip install mannrs --find-links dist --force-reinstall
          uv pip install pytest
          cd tests && pytest

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
